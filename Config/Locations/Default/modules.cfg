representationProviders = [
  {representation = ActivationGraph; provider = BehaviorControl;},
  {representation = ActualCoM; provider = IMUCoMProvider;},
  {representation = ActualCoMRCS; provider = CoMRCSProvider;},
  {representation = ActualCoMFLIPM; provider = CoMProviderModule;},
  {representation = ArmContact; provider = ArmContactProvider;},
  {representation = ArmContactModel; provider = ArmContactModelProvider;},
  {representation = ArmMotionEngineOutput; provider = ArmMotionEngine;},
  {representation = ArmMotionRequest; provider = BehaviorControl;},
  {representation = ArmMovement; provider = ArmAnimator;},
  {representation = AudioData; provider = AudioProvider;},
  {representation = BallModel; provider = BallLocator;},
  {representation = BallModelAfterPreview; provider = Predictor;},
  {representation = BallPercept; provider = TfLiteBallPerceptor;},
  // {representation = BallPercept; provider = ObjectPerceptor;},
  {representation = BallSpots; provider = ShapePerceptor;},
  {representation = BehaviorControlOutput; provider = BehaviorControl;},
  {representation = BehaviorLEDRequest; provider = BehaviorControl;},
  {representation = KickEngineOutput; provider = KickEngine;},
  {representation = BodyContour; provider = BodyContourProvider;},
  {representation = BodyTilt; provider = GyroTiltController;},
  {representation = CameraCalibration; provider = CognitionConfigurationDataProvider;},
  {representation = CameraInfo; provider = CameraProvider;},
  {representation = CameraMatrix; provider = CameraMatrixProvider;},
  {representation = CameraSettings; provider = CognitionConfigurationDataProvider;},
  {representation = CognitionFrameInfo; provider = CameraProvider;},
  {representation = ColorReference; provider = ColorProvider;},
  {representation = CombinedWorldModel; provider = CombinedWorldModelProvider;},
  {representation = ControllerParams; provider = ControllerParams2012Provider;},
  {representation = DamageConfiguration; provider = CognitionConfigurationDataProvider;},
  {representation = DamageConfiguration; provider = MotionConfigurationDataProvider;},
  {representation = DamageConfigurationHead; provider = CognitionConfigurationDataProvider;},
  {representation = DamageConfigurationHead; provider = MotionConfigurationDataProvider;},
  {representation = FallDownState; provider = FallDownStateDetector;},
  {representation = FieldBoundary; provider = FieldBoundaryProvider;},
  {representation = FieldCoverage; provider = FieldCoverageProvider;},
  {representation = FieldDimensions; provider = CognitionConfigurationDataProvider;},
  {representation = FLIPMObserverParams; provider = RequestTranslatorModule;},
  {representation = Footpositions; provider = SwingLegControllerModule;},
  {representation = FootSteps; provider = PatternGenerator2016;},
  {representation = PlannedSteps; provider = StepPlanner;},
  {representation = FilteredJointData; provider = JointFilter;},
  {representation = FilteredSensorData; provider = SensorFilter;},
  {representation = FootContactModel; provider = FootContactModelProvider;},
  {representation = FrameInfo; provider = CameraProvider;},
  {representation = FrameInfo; provider = NaoProvider;},
  {representation = FsrData; provider = FsrDataProvider;},
  {representation = GameInfo; provider = GameInfoProvider;},
  {representation = GoalPercept; provider = GoalPerceptor;},
  {representation = GoalSymbols; provider = GoalPerceptor;},
  {representation = GroundContactState; provider = GroundContactDetector;},
  {representation = GroundTruthBallModel; provider = GroundTruthProvider;},
  {representation = GroundTruthRobotPose; provider = GroundTruthProvider;},
  {representation = GroundTruthWorldState; provider = default;},
  {representation = HardnessSettings; provider = MotionConfigurationDataProvider;},
  {representation = HeadAngleRequest; provider = CameraControlEngine;},
  {representation = HeadJointRequest; provider = HeadMotionEngine;},
  {representation = HeadLimits; provider = CognitionConfigurationDataProvider;},
  {representation = HeadMotionRequest; provider = BehaviorControl;}, // external
  {representation = Image; provider = CameraProvider;},
  {representation = ImageAcquisition; provider = ImageAcquisitionProvider;},
  {representation = ImageCoordinateSystem; provider = CoordinateSystemProvider;},
  {representation = InertiaSensorData; provider = InertiaSensorProvider;},
  {representation = JointCalibration; provider = MotionConfigurationDataProvider;},
  {representation = JointData; provider = NaoProvider;},
  {representation = JointRequest; provider = MotionCombinator;},
  {representation = KeyStates; provider = NaoProvider;},
  {representation = KinematicOutput; provider = NaoKinematic;},
  {representation = KinematicRequest; provider = CSConverterModule;},
  {representation = LEDRequest; provider = LEDHandler;},
  {representation = LineLocalization; provider = LineLocator;},
  {representation = LineAnalysis; provider = LineAnalyzer;},
  {representation = MassCalibration; provider = MotionConfigurationDataProvider;},
  {representation = MotionInfo; provider = MotionCombinator;},
  {representation = MotionRequest; provider = BehaviorControl;},
  {representation = MotionRobotHealth; provider = MotionRobotHealthProvider;},
  {representation = MotionSelection; provider = MotionSelector;},
  {representation = ObservedError; provider = ZMPIPObserver2012Module;},
  {representation = ObservedFLIPMError; provider = FLIPMObserver;},
  {representation = Odometer; provider = OdometerProvider;},
  {representation = OdometryCorrectionTables; provider = CognitionConfigurationDataProvider;},
  {representation = OdometryCorrectionTables; provider = MotionConfigurationDataProvider;},
  {representation = OdometryData; provider = MotionCombinator;},
  {representation = OpponentTeamInfo; provider = NaoProvider;},
  {representation = OrientationData; provider = InertiaSensorFilter;},
  {representation = OwnSideModel; provider = OwnSideModelProvider;},
  {representation = OwnTeamInfo; provider = NaoProvider;},
  {representation = PatternGenRequest; provider = RequestTranslatorModule;},
  {representation = PenaltyMarkPercept; provider = ShapePerceptor;},
  {representation = PersonalData; provider = BehaviorControl;},
  {representation = PlayerPercept; provider = DeepPlayerPerceptor;},
  {representation = LinePercept; provider = ObjectPerceptor;},
  {representation = RandomForests; provider = RandomForestsProvider;},
  {representation = RawGameInfo; provider = NaoProvider;},
  {representation = ReferenceModificator; provider = SwingLegControllerModule;},
  {representation = RefereePercept; provider = default;},
  {representation = RefZMP; provider = ZMPGeneratorModule;},
  {representation = RobotCameraMatrix; provider = RobotCameraMatrixProvider;},
  {representation = RobotDimensions; provider = CognitionConfigurationDataProvider;},
  {representation = RobotDimensions; provider = MotionConfigurationDataProvider;},
  {representation = RobotHealth; provider = RobotHealthProvider;},
  {representation = RobotInfo; provider = NaoProvider;},
  {representation = RobotModel; provider = RobotModelProvider;},
  {representation = RobotPose; provider = SelfLocator;},
  {representation = RobotPoseAfterPreview; provider = Predictor;},
  {representation = RobotPoseSamples; provider = SelfLocator;},
  {representation = PlayerModel; provider = PlayerLocator;},
  {representation = SensorCalibration; provider = MotionConfigurationDataProvider;},
  {representation = SensorData; provider = NaoProvider;},
  {representation = ShapePercept; provider = ShapePerceptor;},
  {representation = SideConfidence; provider = TemporarySideConfidenceProvider;},
  {representation = SpecialActionsOutput; provider = SpecialActions;},
  {representation = SpeedInfo; provider = PatternGenerator2016;},
  {representation = TargetCoM; provider = FLIPMController;},
  {representation = TeamDataSenderOutput; provider = TeamDataSender;},
  {representation = TeamMateData; provider = TeamDataProvider;},
  {representation = Thumbnail; provider = ThumbnailProvider;},
  {representation = TorsoMatrix; provider = TorsoMatrixProvider;},
  {representation = USRequest; provider = USControl;},
  {representation = WalkCalibration; provider = AutoCalibrator;},
  {representation = WalkingEngineOutput; provider = WalkingEngine;},
  {representation = WalkingEngineParams; provider = RequestTranslatorModule;},
  {representation = WalkingEngineStandOutput; provider = LimbCombinator;},
  {representation = WalkingInfo; provider = CSConverterModule;},
  {representation = Whistle; provider = TfLiteWhistleRecognizer;},
  {representation = ZMPModel; provider = CoPProvider;},
  {representation = WalkGeneratorData; provider = Walk2014Generator;},
// TODO [walk] enable walk kick engine
// {representation = WalkKickGenerator; provider = WalkKickEngine;},
  {representation = WalkLearner; provider = Walk2014GeneratorLearner;},
  {representation = FootSupport; provider = FootSupportProvider;},
  {representation = Walk2014Modifier; provider = MotionConfigurationDataProvider;},
];
